table(BCD_Predictions,BCD_Reference)
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/Datasets/NaiveBayesExample - First Half.r')
RawBCD <- read.table("BreastCancerData.data", sep = ',')
getwd()
setwd("C:/Users/Admin/Documents/Datasets")
source('~/Datasets/NaiveBayesExample - First Half.r')
table(BCD_Predictions,BCD_Reference)
?table
print(BCD_Predictions)
example_table <- table(BCD_Predictions)
example_table[B, M]
print(example_table)
example_two <- table(BCD_Predictions, BCD_Reference)
print(example_two)
example_two[B, M]
example_two(loc[1])
loc[1]
data[1, "B"]
data[1, "BCD_Reference"]
data$example_two[1]
?createDataPartition
??createDataPartition
str(example_two)
as.vector(example_two)
names(example_two)
example_two[length(example_two)]
e <- as.vector(example_two)
e
e[c(1, 2)]
e[c(2, 3)]
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/Datasets/NaiveBayesExample - First Half.r')
table(BCD_Predictions,BCD_Reference)
five_nn <- knn(BCD_Training, BCD_Test, BCD_NoID[1:450,1], k=5)
table(five_nn)
table(five_nn, BCD_Reference)
source('~/Datasets/NaiveBayesExample - First Half.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
numericInput(inputId = "beds", label = "Number of Beds", value = 0, min = 0, step = 1),
sliderInput(intputId = "toilets", label = "Number of Toilets", value = 0, min = 0, step = 1, max = 10),
selectInput(inputId = "stories", label = "Number of Stories", choices = c(1: 5))
),
mainPanel(
textOutput(outputId = "Predicted"),
plotOutput(outputId = "Ploty")
)
)
)
server <- function(input, ouput) {
output$Predicted <- renderText({
paste("Predicted Price: Â£ ", input$beds * 100000)
})
}
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
runApp('shinyapp.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(RawIowa_test)
View(RawIowa_test)
View(RawIowa_train)
View(RawIowa_train)
source('~/.active-rstudio-document', echo=TRUE)
View(RawIowa_test)
View(RawIowa_test)
View(RawIowa_test)
View(RawIowa_test)
View(RawIowa_train)
View(RawIowa_train)
View(RawIowa_test)
source('~/.active-rstudio-document', echo=TRUE)
View(RawIowa_test)
View(RawIowa_test)
